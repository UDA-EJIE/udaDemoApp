package com.ejie.x21a.service;


import java.util.List;

import org.springframework.validation.Errors;

import com.ejie.x21a.model.Alumno;
import com.ejie.x38.dto.JQGridRequestDto;
import com.ejie.x38.dto.JQGridResponseDto;
import com.ejie.x38.dto.TableRowDto;

/**
 *  * AlumnoService generated by UDA, 01-mar-2012 9:33:10.
 * @author UDA
 */

public interface TableAlumnoService {

	
	/*
	 * OPERACIONES CRUD
	 */
	
	/**
	 * Inserts a single row in the Alumno table.
	 *
	 * @param alumno Alumno
	 * @return Alumno
	 */
    Alumno add(Alumno alumno);
	
	/**
	 * Updates a single row in the Alumno table.
	 *
	 * @param alumno Alumno
	 * @return Alumno
	 */
	Alumno update(Alumno alumno);

	/**
	 * Finds a single row in the Alumno table.
	 *
	 * @param alumno Alumno
	 * @return Alumno
	 */
	Alumno find(Alumno alumno);

	/**
	 * Deletes a single row in the Alumno table.
	 *
	 * @param alumno Alumno
	 * @return 
	 */
	void remove(Alumno alumno);
	
	/**
	 * Finds a List of rows in the Alumno table.
	 *
	 * @param alumno Alumno
	 * @param pagination Pagination
	 * @return List
	 */
	List<Alumno> findAll(Alumno alumno, JQGridRequestDto jqGridRequestDto);

	/**
	 * Finds rows in the Alumno table using like.
	 *
	 * @param alumno Alumno
	 * @param pagination Pagination
     * @param startsWith Boolean	 
	 * @return List
	 */
	List<Alumno> findAllLike(Alumno alumno, JQGridRequestDto jqGridRequestDto, Boolean startsWith) ;
  
	/*
	 * OPERACIONES RUP_TABLE
	 */
	
	
	/**
	 * Deletes multiple rows in the Alumno table.
	 *
	 * @param alumnoList  ArrayList
	 * @return 
	 */	
	void removeMultiple(Alumno filterAlumno, JQGridRequestDto jqGridRequestDto, Boolean startsWith);
	
	
	/**
	 * Searches in the Usuario table.
	 *
	 * @param filterUsuario Usuario
	 * @param searchUsuario Usuario
	 * @param jqGridRequestDto JQGridRequestDto
	 * @param startsWith Boolean
	 */	
	List<TableRowDto<Alumno>> search(Alumno filterAlumno, Alumno searchAlumno, JQGridRequestDto JQGridRequestDto, Boolean startsWith);

	JQGridResponseDto<Alumno> filter(Alumno alumno, JQGridRequestDto jqGridRequestDto, Boolean startsWith) ;
	
	Object reorderSelection(Alumno alumno, JQGridRequestDto jqGridRequestDto, Boolean startsWith);
	
	/*
	 * OPERACIONES PROPIAS
	 */
	
	/**
	 * Inserts a single row in the Alumno table.
	 *
	 * @param alumno Alumno
	 * @return Alumno
	 */
    Alumno add(Alumno alumno, Errors errors);
    
    /**
	 * Inserts a single row in the Alumno table.
	 *
	 * @param alumno Alumno
	 * @return Alumno
	 */
    Alumno update(Alumno alumno, String oldPassword,  Errors errors);
    
    
    Alumno getImagen(Alumno alumno);
}



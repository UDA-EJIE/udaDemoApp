package com.ejie.x21a.service;
import com.ejie.x21a.dao.PerfilUsuarioDao;
import com.ejie.x38.dto.Pagination;
import java.util.ArrayList;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ejie.x21a.model.PerfilUsuario;

/**
 *  * PerfilUsuarioServiceImpl generated by UDA, 14-nov-2011 9:41:52.
 * @author UDA
 */

@Service(value = "perfilUsuarioService")
public  class PerfilUsuarioServiceImpl implements PerfilUsuarioService {

	private static final  Logger logger = LoggerFactory.getLogger(PerfilUsuarioServiceImpl.class);
	@Autowired
	private PerfilUsuarioDao perfilUsuarioDao;

	/**
	 * Inserts a single row in the PerfilUsuario table.
	 *
	 * @param perfilUsuario PerfilUsuario
	 * @return PerfilUsuario
	 */
	@Transactional(rollbackFor = Throwable.class)
	public PerfilUsuario add(PerfilUsuario perfilUsuario) {
		return this.perfilUsuarioDao.add(perfilUsuario);
	}

	/**
	 * Updates a single row in the PerfilUsuario table.
	 *
	 * @param perfilUsuario PerfilUsuario
	 * @return PerfilUsuario
	 */
	@Transactional(rollbackFor = Throwable.class)
	public PerfilUsuario update(PerfilUsuario perfilUsuario) {
		return this.perfilUsuarioDao.update(perfilUsuario);
	 }

	/**
	 * Finds a single row in the PerfilUsuario table.
	 *
	 * @param perfilUsuario PerfilUsuario
	 * @return PerfilUsuario
	 */
	public PerfilUsuario find(PerfilUsuario perfilUsuario) {
		return (PerfilUsuario) this.perfilUsuarioDao.find(perfilUsuario);
	}

	/**
	 * Finds a List of rows in the PerfilUsuario table.
	 *
	 * @param perfilUsuario PerfilUsuario
	 * @param pagination Pagination
	 * @return List
	 */
	public List<PerfilUsuario> findAll(PerfilUsuario perfilUsuario, Pagination pagination) {
		return (List<PerfilUsuario>) this.perfilUsuarioDao.findAll(perfilUsuario, pagination);
	}
    
	/**
	 * Counts rows in the PerfilUsuario table.
	 *
	 * @param perfilUsuario PerfilUsuario
	 * @return Long
	 */
	public Long findAllCount(PerfilUsuario perfilUsuario) {        
		return  this.perfilUsuarioDao.findAllCount(perfilUsuario);
	}

	/**
	 * Finds rows in the PerfilUsuario table using like.
	 *
	 * @param perfilUsuario PerfilUsuario
	 * @param pagination Pagination
	 * @param startsWith Boolean
	 * @return List
	 */
	public List<PerfilUsuario> findAllLike(PerfilUsuario perfilUsuario, Pagination pagination, Boolean startsWith) {
		return (List<PerfilUsuario>) this.perfilUsuarioDao.findAllLike(perfilUsuario, pagination, startsWith);
	}
    
	/**
	 * Deletes a single row in the PerfilUsuario table.
	 *
	 * @param perfilUsuario PerfilUsuario
	 * @return
	 */
	@Transactional(rollbackFor = Throwable.class)
	public void remove(PerfilUsuario perfilUsuario) {
		this.perfilUsuarioDao.remove(perfilUsuario);
	}
	
	/**
	 * Deletes multiple rows in the PerfilUsuario table.
	 *
	 * @param perfilUsuarioList ArrayList
	 * @return
	 */
	@Transactional(rollbackFor = Throwable.class)
	public void removeMultiple(ArrayList<PerfilUsuario> perfilUsuarioList) {
		for (PerfilUsuario  perfilUsuarioAux:perfilUsuarioList) {
			this.perfilUsuarioDao.remove(perfilUsuarioAux);
		}
	}


	/**
	 * Getter method for PerfilUsuarioDao
	 *
	 * @return PerfilUsuarioDao
	 */
	public PerfilUsuarioDao getPerfilUsuarioDao() {
		return this.perfilUsuarioDao;
	}
    
	/**
	 * Setter method for PerfilUsuarioDao.
	 *
	 * @param  perfilUsuarioDao PerfilUsuarioDao
	 * @return
	 */
	public void setPerfilUsuarioDao(PerfilUsuarioDao perfilUsuarioDao) {
		logger.info("Setting Dependency "+perfilUsuarioDao);
		this.perfilUsuarioDao = perfilUsuarioDao;
	}
}


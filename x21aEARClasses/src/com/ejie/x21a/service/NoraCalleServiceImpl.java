package com.ejie.x21a.service;


import com.ejie.x21a.dao.NoraCalleDao;
import com.ejie.x38.dto.Pagination;
import java.util.ArrayList;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ejie.x21a.model.NoraCalle;

/**
 *  * NoraCalleServiceImpl generated by UDA, 16-ene-2012 13:17:20.
 * @author UDA
 */

@Service(value = "noraCalleService")
public  class NoraCalleServiceImpl implements NoraCalleService {

	private static final  Logger logger = LoggerFactory.getLogger(NoraCalleServiceImpl.class);
	@Autowired
	private NoraCalleDao calleDao;

	/**
	 * Inserts a single row in the Calle table.
	 *
	 * @param calle Calle
	 * @return Calle
	 */
	@Transactional(rollbackFor = Throwable.class)
	public NoraCalle add(NoraCalle calle) {
		return this.calleDao.add(calle);
	}

	/**
	 * Updates a single row in the Calle table.
	 *
	 * @param calle Calle
	 * @return Calle
	 */
	@Transactional(rollbackFor = Throwable.class)
	public NoraCalle update(NoraCalle calle) {
		return this.calleDao.update(calle);
	 }

	/**
	 * Finds a single row in the Calle table.
	 *
	 * @param calle Calle
	 * @return Calle
	 */
	public NoraCalle find(NoraCalle calle) {
		return (NoraCalle) this.calleDao.find(calle);
	}

	/**
	 * Finds a List of rows in the Calle table.
	 *
	 * @param calle Calle
	 * @param pagination Pagination
	 * @return List
	 */
	public List<NoraCalle> findAll(NoraCalle calle, Pagination pagination) {
		return (List<NoraCalle>) this.calleDao.findAll(calle, pagination);
	}
    
	/**
	 * Counts rows in the Calle table.
	 *
	 * @param calle Calle
	 * @return Long
	 */
	public Long findAllCount(NoraCalle calle) {        
		return  this.calleDao.findAllCount(calle);
	}

	/**
	 * Finds rows in the Calle table using like.
	 *
	 * @param calle Calle
	 * @param pagination Pagination
	 * @param startsWith Boolean
	 * @return List
	 */
	public List<NoraCalle> findAllLike(NoraCalle calle, Pagination pagination, Boolean startsWith) {
		return (List<NoraCalle>) this.calleDao.findAllLike(calle, pagination, startsWith);
	}
    
	/**
	 * Deletes a single row in the Calle table.
	 *
	 * @param calle Calle
	 * @return
	 */
	@Transactional(rollbackFor = Throwable.class)
	public void remove(NoraCalle calle) {
		this.calleDao.remove(calle);
	}
	
	/**
	 * Deletes multiple rows in the Calle table.
	 *
	 * @param calleList ArrayList
	 * @return
	 */
	@Transactional(rollbackFor = Throwable.class)
	public void removeMultiple(ArrayList<NoraCalle> calleList) {
		for (NoraCalle  calleAux:calleList) {
			this.calleDao.remove(calleAux);
		}
	}


	/**
	 * Getter method for CalleDao
	 *
	 * @return CalleDao
	 */
	public NoraCalleDao getCalleDao() {
		return this.calleDao;
	}
    
	/**
	 * Setter method for CalleDao.
	 *
	 * @param  calleDao CalleDao
	 * @return
	 */
	public void setCalleDao(NoraCalleDao calleDao) {
		logger.info("Setting Dependency "+calleDao);
		this.calleDao = calleDao;
	}
}


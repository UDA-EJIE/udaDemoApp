package com.ejie.x21a.dao;

import com.ejie.x21a.model.MultiPk;
import com.ejie.x38.dto.JerarquiaDto;
import com.ejie.x38.dto.TableRequestDto;
import com.ejie.x38.dto.TableRowDto;
import java.util.List;


/**
 * MultiPkDao generated by UDA, 28-may-2018 16:28:34.
 * @author UDA
 */

public interface TableMultiPkDao {
    
    /**
     * Inserts a single row in the MultiPk table.
     *
     * @param multipk MultiPk
     * @return MultiPk
     */
    MultiPk add(MultiPk multipk);

    /**
     * Updates a single row in the MultiPk table.
     *
     * @param multipk MultiPk
     * @return MultiPk
     */
    MultiPk update(MultiPk multipk);

    /**
     * Finds a single row in the MultiPk table.
     *
     * @param multipk MultiPk
     * @return MultiPk
     */
    MultiPk find(MultiPk multipk);

    /**
     * Removes a single row in the MultiPk table.
     *
     * @param multipk MultiPk
     */
    void remove(MultiPk multipk);

    /**
     * Finds a List of rows in the MultiPk table.
     *
     * @param multipk MultiPk
     * @param tableRequestDto TableRequestDto
     * @return List
     */
    List<MultiPk> findAll(MultiPk multipk, TableRequestDto tableRequestDto);

	/**
     * Finds rows in the MultiPk table using like.
     *
     * @param multipk MultiPk
     * @param tableRequestDto TableRequestDto
     * @param startsWith Boolean
     * @return List
     */
	List<MultiPk> findAllLike(MultiPk multipk, TableRequestDto tableRequestDto, Boolean startsWith);
	
	
	/*
	 * OPERACIONES RUP_TABLE
	 */
	 
	/**
	 * Removes rows from the MultiPk table.
	 *
	 * @param filterMultiPk MultiPk
	 * @param tableRequestDto TableRequestDto
	 * @param startsWith Boolean
	 */	
	 void removeMultiple(MultiPk filterMultiPk, TableRequestDto tableRequestDto, Boolean startsWith);
	
    /**
     * Counts rows in the MultiPk table using like.
     *
     * @param multipk MultiPk
     * @param startsWith Boolean
     * @return Long
     */
    Long findAllLikeCount(MultiPk multipk, Boolean startsWith);
    
    /**
     * Counts rows in the MultiPk table.
     *
     * @param multipk MultiPk
     * @return Long
     */
    Long findAllCount(MultiPk multipk);
    
    /**
	 * Reorder selection.
	 *
	 * @param filterMultiPk MultiPk
	 * @param tableRequestDto TableRequestDto
	 * @param startsWith Boolean
	 * @return List<TableRowDto<MultiPk>>
	 */	
    List<TableRowDto<MultiPk>> reorderSelection(MultiPk filterMultiPk, TableRequestDto tableRequestDto, Boolean startsWith);
    
     /**
	 * Searches in the Usuario table.
	 *
	 * @param filterMultiPk MultiPk
	 * @param searchMultiPk MultiPk
	 * @param tableRequestDto TableRequestDto
	 * @param startsWith Boolean
	 * @return List<TableRowDto<MultiPk>>	 
	 */	
    List<TableRowDto<MultiPk>> search(MultiPk filterMultiPk, MultiPk searchMultiPk, TableRequestDto tableRequestDto, Boolean startsWith);

    /*
	 * OPERACIONES RUP_TABLE JERARQUIA
	 */
    
    /**
	 * Filter in the hierarchical MultiPk table.
	 *
	 * @param filterMultiPk MultiPk
	 * @param tableRequestDto TableRequestDto
	 * @return List<JerarquiaDto<MultiPk>>
	 */	
	List<JerarquiaDto<MultiPk>> findAllLikeJerarquia(MultiPk filterMultiPk, TableRequestDto tableRequestDto);
	
	/**
	 * Count rows in hierarchy
	 *
	 * @param filterMultiPk MultiPk
	 * @param tableRequestDto TableRequestDto
	 * @return Long
	 */	
	Long findAllLikeCountJerarquia(MultiPk filterMultiPk, TableRequestDto tableRequestDto);
	
	/**
	 * Find dependent hierarchical rows
	 *
	 * @param filterMultiPk MultiPk
	 * @param tableRequestDto TableRequestDto
	 * @return List<TableRowDto<MultiPk>>
	 */	
	List<TableRowDto<MultiPk>> findAllChild(MultiPk filterMultiPk, TableRequestDto tableRequestDto);
	
	/**
    * Exporta Datos al clipBoard
    *
    */
    List<MultiPk> getMultiple(MultiPk filterMultiPk, TableRequestDto tableRequestDto, Boolean startsWith);
	
}


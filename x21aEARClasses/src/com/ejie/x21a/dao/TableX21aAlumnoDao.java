package com.ejie.x21a.dao;

import com.ejie.x38.dto.JerarquiaDto;
import com.ejie.x38.dto.TableRequestDto;
import com.ejie.x38.dto.TableRowDto;
import java.util.List;

import com.ejie.x21a.model.X21aAlumno;

/**
 * X21aAlumnoDao generated by UDA, 15-nov-2018 9:05:36.
 * @author UDA
 */

public interface TableX21aAlumnoDao {
    
    /**
     * Inserts a single row in the X21aAlumno table.
     *
     * @param x21aalumno X21aAlumno
     * @return X21aAlumno
     */
    X21aAlumno add(X21aAlumno x21aalumno);

    /**
     * Updates a single row in the X21aAlumno table.
     *
     * @param x21aalumno X21aAlumno
     * @return X21aAlumno
     */
    X21aAlumno update(X21aAlumno x21aalumno);

    /**
     * Finds a single row in the X21aAlumno table.
     *
     * @param x21aalumno X21aAlumno
     * @return X21aAlumno
     */
    X21aAlumno find(X21aAlumno x21aalumno);

    /**
     * Removes a single row in the X21aAlumno table.
     *
     * @param x21aalumno X21aAlumno
     */
    void remove(X21aAlumno x21aalumno);

    /**
     * Finds a List of rows in the X21aAlumno table.
     *
     * @param x21aalumno X21aAlumno
     * @param tableRequestDto TableRequestDto
     * @return List
     */
    List<X21aAlumno> findAll(X21aAlumno x21aalumno, TableRequestDto tableRequestDto);

	/**
     * Finds rows in the X21aAlumno table using like.
     *
     * @param x21aalumno X21aAlumno
     * @param tableRequestDto TableRequestDto
     * @param startsWith Boolean
     * @return List
     */
	List<X21aAlumno> findAllLike(X21aAlumno x21aalumno, TableRequestDto tableRequestDto, Boolean startsWith);
	
	
	/*
	 * OPERACIONES RUP_TABLE
	 */
	 
	/**
	 * Removes rows from the X21aAlumno table.
	 *
	 * @param filterX21aAlumno X21aAlumno
	 * @param tableRequestDto TableRequestDto
	 * @param startsWith Boolean
	 */	
	 void removeMultiple(X21aAlumno filterX21aAlumno, TableRequestDto tableRequestDto, Boolean startsWith);
	
    /**
     * Counts rows in the X21aAlumno table using like.
     *
     * @param x21aalumno X21aAlumno
     * @param startsWith Boolean
     * @return Long
     */
    Long findAllLikeCount(X21aAlumno x21aalumno, Boolean startsWith);
    
    /**
     * Counts rows in the X21aAlumno table.
     *
     * @param x21aalumno X21aAlumno
     * @return Long
     */
    Long findAllCount(X21aAlumno x21aalumno);
    
    /**
	 * Reorder selection.
	 *
	 * @param filterX21aAlumno X21aAlumno
	 * @param tableRequestDto TableRequestDto
	 * @param startsWith Boolean
	 * @return List<TableRowDto<X21aAlumno>>
	 */	
    List<TableRowDto<X21aAlumno>> reorderSelection(X21aAlumno filterX21aAlumno, TableRequestDto tableRequestDto, Boolean startsWith);
    
     /**
	 * Searches in the Usuario table.
	 *
	 * @param filterX21aAlumno X21aAlumno
	 * @param searchX21aAlumno X21aAlumno
	 * @param tableRequestDto TableRequestDto
	 * @param startsWith Boolean
	 * @return List<TableRowDto<X21aAlumno>>	 
	 */	
    List<TableRowDto<X21aAlumno>> search(X21aAlumno filterX21aAlumno, X21aAlumno searchX21aAlumno, TableRequestDto tableRequestDto, Boolean startsWith);

    /*
	 * OPERACIONES RUP_TABLE JERARQUIA
	 */
    
    /**
	 * Filter in the hierarchical X21aAlumno table.
	 *
	 * @param filterX21aAlumno X21aAlumno
	 * @param tableRequestDto TableRequestDto
	 * @return List<JerarquiaDto<X21aAlumno>>
	 */	
	List<JerarquiaDto<X21aAlumno>> findAllLikeJerarquia(X21aAlumno filterX21aAlumno, TableRequestDto tableRequestDto);
	
	/**
	 * Count rows in hierarchy
	 *
	 * @param filterX21aAlumno X21aAlumno
	 * @param tableRequestDto TableRequestDto
	 * @return Long
	 */	
	Long findAllLikeCountJerarquia(X21aAlumno filterX21aAlumno, TableRequestDto tableRequestDto);
	
	/**
	 * Find dependent hierarchical rows
	 *
	 * @param filterX21aAlumno X21aAlumno
	 * @param tableRequestDto TableRequestDto
	 * @return List<TableRowDto<X21aAlumno>>
	 */	
	List<TableRowDto<X21aAlumno>> findAllChild(X21aAlumno filterX21aAlumno, TableRequestDto tableRequestDto);
	
	/**
    * Exporta Datos al clipBoard
    *
    */
    List<X21aAlumno> getMultiple(X21aAlumno filterX21aAlumno, TableRequestDto tableRequestDto, Boolean startsWith);
	
}


/*
* Copyright 2012 E.J.I.E., S.A.
*
* Licencia con arreglo a la EUPL, Versión 1.1 exclusivamente (la «Licencia»);
* Solo podrá usarse esta obra si se respeta la Licencia.
* Puede obtenerse una copia de la Licencia en
*
* http://ec.europa.eu/idabc/eupl.html
*
* Salvo cuando lo exija la legislación aplicable o se acuerde por escrito,
* el programa distribuido con arreglo a la Licencia se distribuye «TAL CUAL»,
* SIN GARANTÍAS NI CONDICIONES DE NINGÚN TIPO, ni expresas ni implícitas.
* Véase la Licencia en el idioma concreto que rige los permisos y limitaciones
* que establece la Licencia.
*/
package com.ejie.x21a.control;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import com.ejie.x21a.model.Comarca;
import com.ejie.x21a.model.NoraAutonomia;
import com.ejie.x21a.model.NoraProvincia;
import com.ejie.x21a.model.Provincia;
import com.ejie.x21a.model.Usuario;
import com.ejie.x21a.service.JQGridComarcaService;
import com.ejie.x21a.service.JQGridUsuarioService;
import com.ejie.x21a.service.ProvinciaService;
import com.ejie.x38.control.bind.annotation.RequestJsonBody;
import com.ejie.x38.dto.JQGridRequestDto;
import com.ejie.x38.dto.JQGridResponseDto;
import com.ejie.x38.dto.JerarquiaDto;
import com.ejie.x38.util.ObjectConversionManager;
/**
 * UsuarioServiceImpl generated by UDA 1.0, 26-may-2011 13:46:35.
* @author UDA
 */
@Controller
@RequestMapping (value = "/jqGridComarca")
public class JQGridComarcaController  {

	private static final Logger logger = LoggerFactory.getLogger(JQGridComarcaController.class);

	@Autowired
	private JQGridUsuarioService jqGridUsuarioService;
	
	@Autowired 
	private JQGridComarcaService comarcaService;
	
	@Autowired 
	private ProvinciaService provinciaService;
	
	
	/**
	 * Method 'getById'.
	 * @param  id String
	 * @return String
	 */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	public @ResponseBody Comarca getById(@PathVariable BigDecimal id) {
        Comarca comarca = new Comarca();
        comarca.setCode(id);
        comarca = this.comarcaService.find(comarca);
        
        return comarca;
	}
	
	
	 /**
		 * Method 'edit'.
		 * @param usuario Usuario 
		 * @return Usuario
		 */
		@RequestMapping(method = RequestMethod.PUT)
	    public @ResponseBody Comarca edit(@Validated @RequestBody Comarca usuario) {		
	        Comarca usuarioAux = this.comarcaService.update(usuario);
			logger.info("Entity correctly updated!");
	        return usuarioAux;
	    }

		 /**
		 * Method 'add'.
		 * @param usuario Usuario 
		 * @return Usuario
		 */
		@RequestMapping(method = RequestMethod.POST)
		public @ResponseBody Comarca add(@Validated @RequestBody Comarca usuario) {		
	        Comarca usuarioAux = this.comarcaService.add(usuario);
	        logger.info("Entity correctly inserted!");
	    	return usuarioAux;
		}

		 /**
		 * Method 'remove'.
		 * @param id String
		 *
		 */
		@RequestMapping(value = "/{id}", method = RequestMethod.DELETE)
		@ResponseStatus(value=HttpStatus.OK)
	    public @ResponseBody Comarca remove(@PathVariable(value="id") BigDecimal id, HttpServletResponse  response) {
	        Comarca comarca = new Comarca();
	        comarca.setCode(id);
	        this.comarcaService.remove(comarca);
	        logger.info("Entity correctly deleted!");
	        return comarca;
	    }
		
	
	 /**
	  * RUP_TABLE
	  */
		
//		@Json(mixins={@JsonMixin(target=Usuario.class, mixin=UsuarioMixIn.class)})
		@RequestMapping(value = "/filter", method = RequestMethod.POST)
		public @ResponseBody JQGridResponseDto<Comarca> filter(
				@RequestJsonBody(param="filter") Comarca comarca,
				@RequestJsonBody JQGridRequestDto jqGridRequestDto) {
			JQGridComarcaController.logger.info("[GET - jqGrid] : Obtener Usuarios");
			
			return comarcaService.filter(comarca, jqGridRequestDto, false);
		}
		
		@RequestMapping(value = "/search", method = RequestMethod.POST)
		public @ResponseBody Object search(
				@RequestJsonBody(param="filter") Comarca comarcaFilter,
				@RequestJsonBody(param="search") Comarca comarcaSearch,
				@RequestJsonBody JQGridRequestDto jqGridRequestDto){
			
			JQGridComarcaController.logger.info("[GET - find_ALL] : Obtener Usuarios por filtro");
			return comarcaService.search(comarcaFilter, comarcaSearch, jqGridRequestDto, true);
		}
		
		
	/**
	 * N/A	
	 */
		
		/**
		 * Method 'getAllCount'.
		 * @param filterUsuario Usuario 
		 * @return Long
		 */
//		@RequestMapping(value = "/count", method = RequestMethod.GET)
//		public @ResponseBody Long getAllCount(@RequestParam(value = "usuario", required = false) Usuario  filterUsuario) {
//			return jqGridUsuarioService.findAllLikeCount(filterUsuario != null ? filterUsuario: new Usuario (),false);
//		}
		
		
		
//		 /**
//		 * Method 'removeAll'.
//		 * @param  usuarioIds  ArrayList
//		 *
//		 */	
//		@RequestMapping(value = "/deleteAll", method = RequestMethod.POST)
//		@ResponseStatus(value=HttpStatus.OK)
//		public @ResponseBody List<List<String>> removeMultiple(@RequestBody List<List<String>> usuarioIds) {
//		List<Usuario> usuarioList = new ArrayList<Usuario>();
//        for (List<String> usuarioId:usuarioIds) {
//		    Iterator<String> iterator = usuarioId.iterator();
//			    Usuario usuario = new Usuario();
//		        usuario.setId(ObjectConversionManager.convert(iterator.next(), String.class));
//			    usuarioList.add(usuario);
//	    }
//        this.jqGridUsuarioService.removeMultiple(usuarioList);
//        logger.info("All entities correctly deleted!");
//        return usuarioIds;
//	}	
		
		
		
	/*
	 * MAPPING PARA EL COMBO DE PROVINCIAS
	 */
	@RequestMapping(value = "/provincia", method=RequestMethod.GET)
	public @ResponseBody List<Provincia> getProvincias(
			@RequestParam(value="autonomia.id", required=false) String autonomiaId) {
		
		Provincia filtroProvincia = new Provincia();
		
		List<Provincia> findAll = provinciaService.findAll(filtroProvincia, null);
		return findAll;
	}
}
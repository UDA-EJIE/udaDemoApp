package com.ejie.x21a.control;


import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ejie.x21a.model.Task;
import com.ejie.x21a.model.TaskList;
import com.ejie.x21a.service.TaskListService;
import com.ejie.x21a.service.TaskService;

/**
 * ComarcaController generated by UDA, 14-ago-2012 12:59:41.
 * @author UDA
 */
 
@Controller
@RequestMapping (value = "/taskList")

public class TaskListController  {

	private static final Logger logger = LoggerFactory.getLogger(TaskListController.class);

	@Autowired
	private TaskListService taskListService;
	@Autowired
	private TaskService taskService;
	
	/**
	 * Method 'getCreateForm'.
	 *
	 * @param model Model
	 * @return String
	 */
	@RequestMapping(value = "maint", method = RequestMethod.GET)
	public String getCreateForm(Model model) {
		TaskListController.logger.info("[GET - View] : comarca");
		return "taskList";
	}

	/**
	 * Method 'getById'.
	 *
	 * @param code BigDecimal
	 * @return comarca Comarca
	 */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	public @ResponseBody TaskList getById(@PathVariable Integer id) {
        return this.taskListService.find(new TaskList(id));
	}

	/**
	 * Method 'getAll'.
	 *
	 * @param filterComarca Comarca
	 * @return List
	 */
	@RequestMapping(method = RequestMethod.GET)
	public @ResponseBody List<TaskList> getAll(@ModelAttribute TaskList taskList) {
		TaskListController.logger.info("[GET - find_ALL] : Obtener Comarca por filtro");
	    return this.taskListService.findAll(taskList, null);
	}
	
	@RequestMapping(value = "/{id}/task", method = RequestMethod.GET)
	public @ResponseBody List<Task> getTaskById(@PathVariable Integer id) {
		
		Task task = new Task();
		
		task.setList(new TaskList(id));
		
        return this.taskService.findAll(task, null);
	}
	
	
	@RequestMapping(method = RequestMethod.POST)
	public @ResponseBody TaskList post(@RequestBody TaskList taskList) {
		TaskListController.logger.info("[GET - find_ALL] : Obtener Comarca por filtro");
		return this.taskListService.add(taskList);
	    
	}

	@RequestMapping(method = RequestMethod.PUT)
	public @ResponseBody TaskList put(@RequestBody TaskList taskList) {
		TaskListController.logger.info("[GET - find_ALL] : Obtener Comarca por filtro");
		return this.taskListService.update(taskList);
	    
	}
	
	@RequestMapping(value = "/{id}", method = RequestMethod.DELETE)
	public @ResponseBody TaskList delete(@PathVariable Integer id) {
		TaskListController.logger.info("[GET - find_ALL] : Obtener Comarca por filtro");
		return this.taskListService.delete(new TaskList(id));
	    
	}


	



	
}	

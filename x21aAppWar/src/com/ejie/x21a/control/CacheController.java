package com.ejie.x21a.control;


import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ejie.x21a.model.Usuario;
import com.ejie.x21a.service.CacheService;
import com.ejie.x38.control.bind.annotation.RequestJsonBody;
import com.ejie.x38.dto.JQGridRequestDto;
import com.ejie.x38.dto.JQGridResponseDto;

/**
 * ComarcaController generated by UDA, 14-ago-2012 12:59:41.
 * @author UDA
 */
 
@Controller
@RequestMapping (value = "/integracion/cache")
public class CacheController  {

	private static final Logger logger = LoggerFactory.getLogger(CacheController.class);

	@Autowired
	private CacheService cacheService;
	
	/**
	 * Method 'getCreateForm'.
	 *
	 * @param model Model
	 * @return String
	 */
	@RequestMapping(value = "view", method = RequestMethod.GET)
	public String getCreateForm(Model model) {
		CacheController.logger.info("[GET - View] : cache");
		return "cache";
	}
	
	@RequestMapping(method = RequestMethod.PUT)
    public @ResponseBody Usuario edit(@Validated @RequestBody Usuario usuario) {
		if (usuario.getEjie()==null){
			usuario.setEjie("0");
		}
        Usuario usuarioAux = this.cacheService.update(usuario, Boolean.TRUE);
		logger.info("Entity correctly updated!");
        return usuarioAux;
    }
	
	@RequestMapping(value = "/filter", method = RequestMethod.POST)
	public @ResponseBody JQGridResponseDto<Usuario> grid(
			@RequestJsonBody(param="filter", required=false) Usuario filterUsuario,
			@RequestJsonBody JQGridRequestDto jqGridRequestDto) {
		CacheController.logger.info("[POST - jqGrid] : Obtener Usuarios");
		
		
		List<Usuario> listUser = cacheService.getAll(filterUsuario, null, Boolean.TRUE);
		
				
		int page = jqGridRequestDto.getPage().intValue();
		int rows = jqGridRequestDto.getRows().intValue();
		long recordNum = listUser.size();
		
		List<Usuario> paginatedList =  listUser.subList((page-1)*rows, ((page-1)*rows)+rows);
		
		JQGridResponseDto<Usuario> jqGridResponseDto = new JQGridResponseDto<Usuario>(jqGridRequestDto, recordNum, paginatedList);
		
		return jqGridResponseDto;
	}
	
}	

/*
* Copyright 2012 E.J.I.E., S.A.
*
* Licencia con arreglo a la EUPL, Versión 1.1 exclusivamente (la «Licencia»);
* Solo podrá usarse esta obra si se respeta la Licencia.
* Puede obtenerse una copia de la Licencia en
*
* http://ec.europa.eu/idabc/eupl.html
*
* Salvo cuando lo exija la legislación aplicable o se acuerde por escrito,
* el programa distribuido con arreglo a la Licencia se distribuye «TAL CUAL»,
* SIN GARANTÍAS NI CONDICIONES DE NINGÚN TIPO, ni expresas ni implícitas.
* Véase la Licencia en el idioma concreto que rige los permisos y limitaciones
* que establece la Licencia.
*/
package com.ejie.x21a.control;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.context.support.ReloadableResourceBundleMessageSource;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.ejie.x21a.model.Alumno;
import com.ejie.x21a.model.Comarca;
import com.ejie.x21a.model.Localidad;
import com.ejie.x21a.model.NoraAutonomia;
import com.ejie.x21a.model.NoraPais;
import com.ejie.x21a.model.Usuario;
import com.ejie.x21a.service.NoraAutonomiaService;
import com.ejie.x21a.service.NoraPaisService;

/**
 * UsuarioServiceImpl generated by UDA 1.0, 26-may-2011 13:46:35.
* @author UDA
 */
@Controller
@RequestMapping (value = "/tableLegacy")
public class JQTableController  {

	@Resource
	private ReloadableResourceBundleMessageSource messageSource;
	
	@Autowired
	private NoraPaisService noraPaisService;
	
	@Autowired
	private NoraAutonomiaService noraAutonomiaService;
	
	
	@RequestMapping(value = "filtroSimple", method = RequestMethod.GET)
	public String getFiltroSimple (Model model) {
		model.addAttribute("tituloPagina",
				messageSource.getMessage("filtroSimpleTitle", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableFiltroSimple";
	}
	
	
	@RequestMapping(value = "jerarquia", method = RequestMethod.GET)
	public String getJerarquia (Model model) {
		model.addAttribute("tituloPagina",
				messageSource.getMessage("jerarquiaTitle", null, LocaleContextHolder.getLocale()) + " - " +
				messageSource.getMessage("jerarquia", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableJerarquia";
	}
	
	@RequestMapping(value = "jerarquiaMulti", method = RequestMethod.GET)
	public String getJerarquiaMulti (Model model) {
		model.addAttribute("tituloPagina",
				messageSource.getMessage("jerarquiaTitle", null, LocaleContextHolder.getLocale()) + " - " +
				messageSource.getMessage("jerarquiaMulti", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableJerarquiaMulti";
	}
	
	@RequestMapping(value = "formEditAutogenerated", method = RequestMethod.GET)
	public String getFormEditAutogenerated(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaFormEditAutogenerated", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableFormEditAutogenerated";
	}
	
	@RequestMapping(value = "formEdit", method = RequestMethod.GET)
	public String getFormEdit(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaFormEdit", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableFormEdit";
	}
	
	@RequestMapping(value = "formEditTabs", method = RequestMethod.GET)
	public String getFormEditTabs(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaFormEdit", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableFormEditTabs";
	}
	
	@RequestMapping(value = "formEditTabs2", method = RequestMethod.GET)
	public String getFormEditTabs2(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaFormEditMultiselection", null, LocaleContextHolder.getLocale()));
		model.addAttribute("comarca", new Comarca());
		return "jqtableFormEditTabs2";
	}
	
	@RequestMapping(value = "formEditMultiselection", method = RequestMethod.GET)
	public String getFormEditMultiselection(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaFormEditMultiselection", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableFormEditMultiselection";
	}
	
	@RequestMapping(value = "inlineEdit", method = RequestMethod.GET)
	public String getInlineEdit(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaInlineEdit", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableInlineEdit";
	}
	
	@RequestMapping(value = "inlineEditExcelMode", method = RequestMethod.GET)
	public String getInlineEditExcelMode(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaInlineEditExcelMode", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableInlineEditExcelMode";
	}
	
	@RequestMapping(value = "inlineEditDynamicColumns", method = RequestMethod.GET)
	public String getInlineEditDynamicColumns(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaInlineDynamicColumns", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableInlineEditDynamicColumns";
	}
	
	@RequestMapping(value = "inlineEditMultiselection", method = RequestMethod.GET)
	public String getInlineEditMultiselection(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaInlineEditMultiselection", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableInlineEditMultiselection";
	}
	
	@RequestMapping(value = "grouping", method = RequestMethod.GET)
	public String getGrouping(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaGrouping", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableGrouping";
	}
	
	@RequestMapping(value = "masterDetail", method = RequestMethod.GET)
	public String getMasterDetail(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaMasterDetail", null, LocaleContextHolder.getLocale()));
		model.addAttribute("comarca", new Comarca());
		model.addAttribute("localidad", new Localidad());
		return "jqtableMasterDetail";
	}
	
	@RequestMapping(value = "tableLoadOnStartUp", method = RequestMethod.GET)
	public String gettableLoadOnStartUp(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tableLoadOnStartUp", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableLoadOnStartUp";
	}
	
	@RequestMapping(value = "dialog", method = RequestMethod.GET)
	public String getDialog(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaDialog", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableDialog";
	}
	
	@RequestMapping(value = "dialogAjax", method = RequestMethod.GET)
	public String getDialogAjax(Model model) {
//		model.addAttribute("tituloPagina", messageSource.getMessage("tablaDialog", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableLegacyDialogAjax";
	}
	
	
	@RequestMapping(value = "masterDetailMultiselection", method = RequestMethod.GET)
	public String getMasterDetailMultiselection(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaMasterDetail", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableMasterDetailMultiselection";
	}
	
	@RequestMapping(value = "allFeatures", method = RequestMethod.GET)
	public String getAllFeatures(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tablaAllFeatures", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableAllFeatures";
	}
	
	
	@RequestMapping(value = "tableRadiobutton", method = RequestMethod.GET)
	public String getTableRadiobutton(Model model) {
		model.addAttribute("tituloPagina", messageSource.getMessage("tableRadiobutton", null, LocaleContextHolder.getLocale()));
		model.addAttribute("usuario", new Usuario());
		return "jqtableRadiobutton";
	}
	
	
	@RequestMapping(value = "alumnomaint", method = RequestMethod.GET)
	public String getAlumnoSimple(Model model) {
		List<NoraPais> paises = noraPaisService.findAll(null, null);
		model.addAttribute("paises",paises);
		
		List<NoraAutonomia> autonomias = noraAutonomiaService.findAll(null, null);
		model.addAttribute("autonomias",autonomias);
		model.addAttribute("usuario", new Usuario());
		
		Alumno alumno = new Alumno();
		
		NoraPais pais = new NoraPais();
		pais.setId("108");
		alumno.setPais(pais);
		
		model.addAttribute("alumno",alumno);
		
		return "jqtablealumno";
	}
}
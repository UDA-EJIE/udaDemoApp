package com.ejie.x21a.control;

import java.math.BigDecimal;
import java.util.List;

import org.hdiv.services.TrustAssertion;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ejie.x21a.model.Provincia;
import com.ejie.x21a.service.ProvinciaService;

/**
 * ProvinciaController generated by UDA, 14-ago-2012 12:59:41.
 * @author UDA
 */
 
@Controller
@RequestMapping (value = "/provincia")

public class ProvinciaController  {

	private static final Logger logger = LoggerFactory.getLogger(ProvinciaController.class);

	@Autowired
	private ProvinciaService provinciaService;
	
	/**
	 * Method 'getCreateForm'.
	 *
	 * @param model Model
	 * @return String
	 */
	@GetMapping(value = "maint")
	public String getCreateForm(Model model) {
		ProvinciaController.logger.info("[GET - View] : provincia");
		return "provincia";
	}

	/**
	 * Method 'getById'.
	 *
	 * @param code BigDecimal
	 * @return provincia Provincia
	 */
	@GetMapping(value = "/{code}")
	public @ResponseBody Provincia getById(@PathVariable @TrustAssertion(idFor = Provincia.class) BigDecimal code) {
        Provincia provincia = new Provincia();
		provincia.setCode(code);
        provincia = this.provinciaService.find(provincia);
        ProvinciaController.logger.info("[GET - findBy_PK] : Obtener Provincia por PK");
        return provincia;
	}

	/**
	 * Method 'getAll'.
	 *
	 * @param filterProvincia Provincia
	 * @return List
	 */
	@GetMapping
	public @ResponseBody List<Provincia> getAll(@ModelAttribute Provincia filterProvincia) {
		ProvinciaController.logger.info("[GET - find_ALL] : Obtener Provincia por filtro");
	    return this.provinciaService.findAll(filterProvincia, null);
	}



	
	


}	

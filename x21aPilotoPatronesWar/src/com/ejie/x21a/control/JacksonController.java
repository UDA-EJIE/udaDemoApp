package com.ejie.x21a.control;

import java.util.List;
import java.util.Map;
import java.util.Properties;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.ejie.x21a.model.Comarca;
import com.ejie.x21a.model.Localidad;
import com.ejie.x21a.service.LocalidadService;
import com.ejie.x21a.service.ProvinciaService;
import com.ejie.x38.dto.JQGridJSONModel;
import com.ejie.x38.dto.Pagination;
/**
 * ProvinciaServiceImpl generated by UDA 1.0, 29-jul-2011 9:08:13.
* @author UDA
 */
@Controller
@RequestMapping (value = "/jackson")

public class JacksonController  {

	@Autowired
	private ProvinciaService provinciaService;
	@Autowired
	private LocalidadService localidadService;
	
	@Autowired
	private Properties appConfiguration;
	 /**
	 * Method 'getCreateForm'.
	 *
	 * @param model Model
	 * @return String
	 */
	@RequestMapping(value = "maint", method = RequestMethod.GET)
	public ModelAndView getCreateForm(Model model) {
		model.addAttribute("defaultLanguage",
				appConfiguration.get("x21aPilotoPatronesWar.default.language"));
		model.addAttribute("defaultLayout",
				appConfiguration.get("x21aPilotoPatronesWar.default.layout"));
		return new ModelAndView("jackson", "model", model);
	}

	 /**
	 * Method 'getById'.
	 * @param  code BigDecimal
	 * @return String
	 */
	@RequestMapping(value = "/localidades", method = RequestMethod.GET)
	public @ResponseBody Object getProvincias(HttpServletRequest request) {
		
        Pagination pagination = null;
	    if ("true".equals(request.getHeader("JQGridModel"))) {
		    pagination = new Pagination();
		    pagination.setPage(Long.valueOf(request.getParameter("page")));
		    pagination.setRows(Long.valueOf(request.getParameter("rows")));
		    pagination.setSort(request.getParameter("sidx"));
		    pagination.setAscDsc(request.getParameter("sord"));
		    List<Localidad> listaLocalidades = this.localidadService.findAll(new Localidad(), pagination);

	        Long total =  getAllCount(new Localidad(), request);
		    JQGridJSONModel data = new JQGridJSONModel();
		    data.setPage(request.getParameter("page"));
		    data.setRecords(total.intValue());
		    data.setTotal(total, pagination.getRows());
		    data.setRows(listaLocalidades);
		    return data;
		}else{
			List<Localidad> listaLocalidades =  this.localidadService.findAllLike(new Localidad(), pagination, false);
		    return listaLocalidades;
		}
	}
	
	@RequestMapping(value = "/localidades/combo", method = RequestMethod.GET)
	public @ResponseBody Object getComboLocalidades(HttpServletRequest request) {
		
		return this.localidadService.findAll(new Localidad(),null);
	}
	
	@RequestMapping(value = "usuario/count", method = RequestMethod.GET)
	public @ResponseBody Long getAllCount(
			@RequestParam(value = "usuario", required = false) Localidad  filterUsuario, HttpServletRequest request) {
			return localidadService.findAllCount(filterUsuario != null ? filterUsuario: new Localidad ());
	}


	@RequestMapping(value = "/multiEntidad", method = RequestMethod.PUT)
	public @ResponseBody Object setLocalidad(@RequestBody Localidad localidad) {
		
        return localidad;
	}
	
	@RequestMapping(value = "/multiEntidadCollection", method = RequestMethod.PUT)
	public @ResponseBody Map<String,Object> setComarca(@RequestBody Map<String,Object> mapa) {
		
        return mapa;
	}
	
	@RequestMapping(value = "/multipleModels", method = RequestMethod.PUT)
	public @ResponseBody Comarca setMultipleModels(@RequestBody ModelMap comarca) {
		
        return null;
	}
	
	@RequestMapping(value = "/pruebaArray", method = RequestMethod.PUT)
	public @ResponseBody Comarca setPruebaArray(@RequestBody Comarca comarca) {
		
        return comarca;
	}
	
	/**
	 * Method 'getProvinciaService'.
	 *
	 * @return ProvinciaService
	 *
	 */
	protected ProvinciaService getProvinciaService() {
		return this.provinciaService;
	}

	/**
	 * Method 'setProvinciaService'.
	 *
	 * @param provinciaService  ProvinciaService
	 *
	 */
	public void setProvinciaService(ProvinciaService provinciaService) {
		this.provinciaService = provinciaService;
	}
	
	/**
	 * Method 'getAppConfiguration'.
	 * 
	 * @return appConfiguration
	 * 
	 */
	public Properties getAppConfiguration() {
		return appConfiguration;
	}

	/**
	 * Method 'setAppConfiguration'.
	 * 
	 * @paramappConfiguration Properties
	 * 
	 */
	public void setAppConfiguration(Properties appConfiguration) {
		this.appConfiguration = appConfiguration;
	}
}	
	
